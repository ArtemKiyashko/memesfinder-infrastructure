{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "defaultTags": {
            "type": "object"
        },
        "cognitiveservices": {
            "type": "object"
        },
        "loganalyticsworkspace": {
            "type": "object"
        },
        "appinsights": {
            "type": "object"
        },
        "keyvault": {
            "type": "object"
        },
        "servicebus": {
            "type": "object"
        },
        "storageaccount": {
            "type": "object"
        },
        "appserviceplan_gateway": {
            "type": "object"
        },
        "functionapp_gateway": {
            "type": "object"
        },
        "functionapp_textprocessor": {
            "type": "object"
        },
        "appserviceplan_textprocessor": {
            "type": "object"
        },
        "appserviceplan_memeprocessor": {
            "type": "object"
        },
        "appserviceplan_greeter": {
            "type": "object"
        },
        "functionapp_memeprocessor": {
            "type": "object"
        },
        "appserviceplan_decisionmaker": {
            "type": "object"
        },
        "functionapp_decisionmaker": {
            "type": "object"
        },
        "appserviceplan_messageorchestrator": {
            "type": "object"
        },
        "functionapp_messageorchestrator": {
            "type": "object"
        },
        "functionapp_greeter": {
            "type": "object"
        },
        "smartDetectionActionGroup": {
            "type": "object"
        },
        "textAnalyticsService": {
            "type": "object"
        }
    },
    "variables": {
        "rsgLocation": "[resourceGroup().location]",
        "servicebus_sender_role": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '69a216fc-b8fb-44d8-bc22-1f3c2cd27a39')]",
        "servicebus_reader_role": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4f6d3b9b-027b-4f4c-9142-0e5a2a2247e0')]",
        "languageservices_reader_role": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '7628b7b8-a8b2-4cdc-b46f-e9b35248918e')]",
        "cognitiveservices_reader_role": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'a97b65f3-24c7-4388-baec-2e87135dc908')]",
        "linkToAiResourceSmartRules": "[concat('hidden-link:', resourceId('microsoft.insights/components', parameters('appinsights').name))]"
    },
    "resources": [
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2022-03-01",
            "name": "[parameters('cognitiveservices').name]",
            "location": "[variables('rsgLocation')]",
            "tags": "[parameters('defaultTags')]",
            "sku": "[parameters('cognitiveservices').sku]",
            "kind": "CognitiveServices",
            "identity": {
                "type": "None"
            },
            "properties": {
                "apiProperties": {},
                "customSubDomainName": "[parameters('cognitiveservices').name]",
                "networkAcls": {
                    "defaultAction": "Allow",
                    "virtualNetworkRules": [],
                    "ipRules": []
                },
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2021-12-01-preview",
            "name": "[parameters('loganalyticsworkspace').name]",
            "location": "[variables('rsgLocation')]",
            "tags": "[parameters('defaultTags')]",
            "properties": {
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30,
                "features": {
                    "enableLogAccessUsingOnlyResourcePermissions": true
                },
                "workspaceCapping": {
                    "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02",
            "name": "[parameters('appinsights').name]",
            "location": "[variables('rsgLocation')]",
            "tags": "[parameters('defaultTags')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Flow_Type": "Bluefield",
                "Request_Source": "rest",
                "RetentionInDays": 90,
                "WorkspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('loganalyticsworkspace').name)]",
                "IngestionMode": "LogAnalytics",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            },
            "dependsOn": [
                "[resourceId('microsoft.operationalinsights/workspaces', parameters('loganalyticsworkspace').name)]"
            ],
            "resources": [
                {
                    "type": "ProactiveDetectionConfigs",
                    "apiVersion": "2018-05-01-preview",
                    "name": "degradationindependencyduration",
                    "location": "[variables('rsgLocation')]",
                    "tags": {
                        "[variables('linkToAiResourceSmartRules')]": "Resource"
                    },
                    "dependsOn": [
                        "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                    ],
                    "properties": {
                        "enabled": true,
                        "name": "degradationindependencyduration",
                        "sendEmailsToSubscriptionOwners": true,
                        "customEmails": []
                    }
                },
                {
                    "type": "ProactiveDetectionConfigs",
                    "apiVersion": "2018-05-01-preview",
                    "name": "degradationinserverresponsetime",
                    "location": "[variables('rsgLocation')]",
                    "tags": {
                        "[variables('linkToAiResourceSmartRules')]": "Resource"
                    },
                    "dependsOn": [
                        "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                    ],
                    "properties": {
                        "name": "degradationinserverresponsetime",
                        "enabled": true,
                        "sendEmailsToSubscriptionOwners": true,
                        "customEmails": []
                    }
                },
                {
                    "type": "ProactiveDetectionConfigs",
                    "apiVersion": "2018-05-01-preview",
                    "name": "digestMailConfiguration",
                    "location": "[variables('rsgLocation')]",
                    "tags": {
                        "[variables('linkToAiResourceSmartRules')]": "Resource"
                    },
                    "dependsOn": [
                        "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                    ],
                    "properties": {
                        "name": "digestMailConfiguration",
                        "enabled": true,
                        "sendEmailsToSubscriptionOwners": true,
                        "customEmails": []
                    }
                },
                {
                    "type": "ProactiveDetectionConfigs",
                    "apiVersion": "2018-05-01-preview",
                    "name": "extension_billingdatavolumedailyspikeextension",
                    "location": "[variables('rsgLocation')]",
                    "tags": {
                        "[variables('linkToAiResourceSmartRules')]": "Resource"
                    },
                    "dependsOn": [
                        "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                    ],
                    "properties": {
                        "name": "extension_billingdatavolumedailyspikeextension",
                        "enabled": true,
                        "sendEmailsToSubscriptionOwners": true,
                        "customEmails": []
                    }
                },
                {
                    "type": "ProactiveDetectionConfigs",
                    "apiVersion": "2018-05-01-preview",
                    "name": "extension_canaryextension",
                    "location": "[variables('rsgLocation')]",
                    "tags": {
                        "[variables('linkToAiResourceSmartRules')]": "Resource"
                    },
                    "dependsOn": [
                        "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                    ],
                    "properties": {
                        "name": "extension_canaryextension",
                        "enabled": true,
                        "sendEmailsToSubscriptionOwners": true,
                        "customEmails": []
                    }
                },
                {
                    "type": "ProactiveDetectionConfigs",
                    "apiVersion": "2018-05-01-preview",
                    "name": "extension_exceptionchangeextension",
                    "location": "[variables('rsgLocation')]",
                    "tags": {
                        "[variables('linkToAiResourceSmartRules')]": "Resource"
                    },
                    "dependsOn": [
                        "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                    ],
                    "properties": {
                        "name": "extension_exceptionchangeextension",
                        "enabled": true,
                        "sendEmailsToSubscriptionOwners": true,
                        "customEmails": []
                    }
                },
                {
                    "type": "ProactiveDetectionConfigs",
                    "apiVersion": "2018-05-01-preview",
                    "name": "extension_memoryleakextension",
                    "location": "[variables('rsgLocation')]",
                    "tags": {
                        "[variables('linkToAiResourceSmartRules')]": "Resource"
                    },
                    "dependsOn": [
                        "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                    ],
                    "properties": {
                        "name": "extension_memoryleakextension",
                        "enabled": true,
                        "sendEmailsToSubscriptionOwners": true,
                        "customEmails": []
                    }
                },
                {
                    "type": "ProactiveDetectionConfigs",
                    "apiVersion": "2018-05-01-preview",
                    "name": "extension_securityextensionspackage",
                    "location": "[variables('rsgLocation')]",
                    "tags": {
                        "[variables('linkToAiResourceSmartRules')]": "Resource"
                    },
                    "dependsOn": [
                        "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                    ],
                    "properties": {
                        "name": "extension_securityextensionspackage",
                        "enabled": true,
                        "sendEmailsToSubscriptionOwners": true,
                        "customEmails": []
                    }
                },
                {
                    "type": "ProactiveDetectionConfigs",
                    "apiVersion": "2018-05-01-preview",
                    "name": "extension_traceseveritydetector",
                    "location": "[variables('rsgLocation')]",
                    "tags": {
                        "[variables('linkToAiResourceSmartRules')]": "Resource"
                    },
                    "dependsOn": [
                        "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                    ],
                    "properties": {
                        "name": "extension_traceseveritydetector",
                        "enabled": true,
                        "sendEmailsToSubscriptionOwners": true,
                        "customEmails": []
                    }
                },
                {
                    "type": "ProactiveDetectionConfigs",
                    "apiVersion": "2018-05-01-preview",
                    "name": "longdependencyduration",
                    "location": "[variables('rsgLocation')]",
                    "tags": {
                        "[variables('linkToAiResourceSmartRules')]": "Resource"
                    },
                    "dependsOn": [
                        "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                    ],
                    "properties": {
                        "name": "longdependencyduration",
                        "enabled": true,
                        "sendEmailsToSubscriptionOwners": true,
                        "customEmails": []
                    }
                },
                {
                    "type": "ProactiveDetectionConfigs",
                    "apiVersion": "2018-05-01-preview",
                    "name": "migrationToAlertRulesCompleted",
                    "location": "[variables('rsgLocation')]",
                    "tags": {
                        "[variables('linkToAiResourceSmartRules')]": "Resource"
                    },
                    "dependsOn": [
                        "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                    ],
                    "properties": {
                        "name": "migrationToAlertRulesCompleted",
                        "enabled": true,
                        "sendEmailsToSubscriptionOwners": false,
                        "customEmails": []
                    }
                },
                {
                    "type": "ProactiveDetectionConfigs",
                    "apiVersion": "2018-05-01-preview",
                    "name": "slowpageloadtime",
                    "location": "[variables('rsgLocation')]",
                    "tags": {
                        "[variables('linkToAiResourceSmartRules')]": "Resource"
                    },
                    "dependsOn": [
                        "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                    ],
                    "properties": {
                        "name": "slowpageloadtime",
                        "enabled": true,
                        "sendEmailsToSubscriptionOwners": true,
                        "customEmails": []
                    }
                },
                {
                    "type": "ProactiveDetectionConfigs",
                    "apiVersion": "2018-05-01-preview",
                    "name": "slowserverresponsetime",
                    "location": "[variables('rsgLocation')]",
                    "tags": {
                        "[variables('linkToAiResourceSmartRules')]": "Resource"
                    },
                    "dependsOn": [
                        "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                    ],
                    "properties": {
                        "name": "slowserverresponsetime",
                        "enabled": true,
                        "sendEmailsToSubscriptionOwners": true,
                        "customEmails": []
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Insights/actionGroups",
            "apiVersion": "2021-09-01",
            "name": "[parameters('smartDetectionActionGroup').name]",
            "tags": "[parameters('defaultTags')]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
            ],
            "properties": {
                "groupShortName": "[parameters('smartDetectionActionGroup').shortName]",
                "enabled": true,
                "armRoleReceivers": "[parameters('smartDetectionActionGroup').armRoleReceivers]"
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2021-04-01",
            "name": "[concat('Dependency Latency Degradation - ', parameters('appinsights').name)]",
            "tags": "[parameters('defaultTags')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', parameters('smartDetectionActionGroup').name)]"
            ],
            "properties": {
                "description": "Dependency Latency Degradation notifies you of an unusual increase in response by a dependency your app is calling (e.g. REST API or database)",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "P1D",
                "detector": {
                    "id": "DependencyPerformanceDegradationDetector"
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('Microsoft.Insights/actionGroups', parameters('smartDetectionActionGroup').name)]"
                    ]
                }
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2021-04-01",
            "name": "[concat('Exception Anomalies - ', parameters('appinsights').name)]",
            "tags": "[parameters('defaultTags')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', parameters('smartDetectionActionGroup').name)]"
            ],
            "properties": {
                "description": "Exception Anomalies notifies you of an unusual rise in the rate of exceptions thrown by your app.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "P1D",
                "detector": {
                    "id": "ExceptionVolumeChangedDetector"
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('Microsoft.Insights/actionGroups', parameters('smartDetectionActionGroup').name)]"
                    ]
                }
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2021-04-01",
            "name": "[concat('Failure Anomalies - ', parameters('appinsights').name)]",
            "tags": "[parameters('defaultTags')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', parameters('smartDetectionActionGroup').name)]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector"
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('Microsoft.Insights/actionGroups', parameters('smartDetectionActionGroup').name)]"
                    ]
                }
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2021-04-01",
            "name": "[concat('Potential Memory Leak - ', parameters('appinsights').name)]",
            "tags": "[parameters('defaultTags')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', parameters('smartDetectionActionGroup').name)]"
            ],
            "properties": {
                "description": "Potential Memory Leak notifies you of increased memory consumption pattern by your app which may indicate a potential memory leak.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "P1D",
                "detector": {
                    "id": "MemoryLeakDetector"
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('Microsoft.Insights/actionGroups', parameters('smartDetectionActionGroup').name)]"
                    ]
                }
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2021-04-01",
            "name": "[concat('Response Latency Degradation - ', parameters('appinsights').name)]",
            "tags": "[parameters('defaultTags')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', parameters('smartDetectionActionGroup').name)]"
            ],
            "properties": {
                "description": "Response Latency Degradation notifies you of an unusual increase in latency in your app response to requests.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "P1D",
                "detector": {
                    "id": "RequestPerformanceDegradationDetector"
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('Microsoft.Insights/actionGroups', parameters('smartDetectionActionGroup').name)]"
                    ]
                }
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2021-04-01",
            "name": "[concat('Trace Severity Degradation - ', parameters('appinsights').name)]",
            "tags": "[parameters('defaultTags')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/actionGroups', parameters('smartDetectionActionGroup').name)]"
            ],
            "properties": {
                "description": "Trace Severity Degradation notifies you of an unusual increase in the severity of the traces generated by your app.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "P1D",
                "detector": {
                    "id": "TraceSeverityDetector"
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('Microsoft.Insights/actionGroups', parameters('smartDetectionActionGroup').name)]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2022-07-01",
            "name": "[parameters('keyvault').name]",
            "location": "[variables('rsgLocation')]",
            "tags": "[parameters('defaultTags')]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false,
                "publicNetworkAccess": "Enabled",
                "accessPolicies": [
                    {
                        "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionapp_memeprocessor').name), '2022-03-01', 'Full').identity.principalId]",
                        "permissions": {
                            "secrets": [ "get" ]
                        },
                        "tenantId": "[subscription().tenantId]"
                    },
                    {
                        "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionapp_gateway').name), '2022-03-01', 'Full').identity.principalId]",
                        "permissions": {
                            "secrets": [ "get" ]
                        },
                        "tenantId": "[subscription().tenantId]"
                    },
                    {
                        "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionapp_greeter').name), '2022-03-01', 'Full').identity.principalId]",
                        "permissions": {
                            "secrets": [ "get" ]
                        },
                        "tenantId": "[subscription().tenantId]"
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionapp_memeprocessor').name)]",
                "[resourceId('Microsoft.Web/sites', parameters('functionapp_gateway').name)]",
                "[resourceId('Microsoft.Web/sites', parameters('functionapp_greeter').name)]"
            ]
        },
        {
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2022-01-01-preview",
            "name": "[parameters('servicebus').name]",
            "location": "[variables('rsgLocation')]",
            "tags": "[parameters('defaultTags')]",
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            },
            "properties": {
                "minimumTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "disableLocalAuth": false,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(parameters('servicebus').name, '/allmessages')]",
            "location": "[variables('rsgLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('servicebus').name)]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": true,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(parameters('servicebus').name, '/textmessages')]",
            "location": "[variables('rsgLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('servicebus').name)]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": true,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(parameters('servicebus').name, '/keywordmessages')]",
            "location": "[variables('rsgLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('servicebus').name)]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": true,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(parameters('servicebus').name, '/generalmessages')]",
            "location": "[variables('rsgLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('servicebus').name)]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": true,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(parameters('servicebus').name, '/newmembersmessages')]",
            "location": "[variables('rsgLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('servicebus').name)]"
            ],
            "properties": {
                "maxMessageSizeInKilobytes": 256,
                "defaultMessageTimeToLive": "P14D",
                "maxSizeInMegabytes": 1024,
                "requiresDuplicateDetection": false,
                "duplicateDetectionHistoryTimeWindow": "PT10M",
                "enableBatchedOperations": true,
                "status": "Active",
                "supportOrdering": true,
                "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
                "enablePartitioning": false,
                "enableExpress": false
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(parameters('servicebus').name, '/generalmessages/decisionmaker')]",
            "location": "[variables('rsgLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('servicebus').name, 'generalmessages')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('servicebus').name)]"
            ],
            "properties": {
                "isClientAffine": false,
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true,
                "autoDeleteOnIdle": "P14D"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(parameters('servicebus').name, '/textmessages/textprocessor')]",
            "location": "[variables('rsgLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('servicebus').name, 'textmessages')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('servicebus').name)]"
            ],
            "properties": {
                "isClientAffine": false,
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true,
                "autoDeleteOnIdle": "P14D"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(parameters('servicebus').name, '/allmessages/orchestrator')]",
            "location": "[variables('rsgLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('servicebus').name, 'allmessages')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('servicebus').name)]"
            ],
            "properties": {
                "isClientAffine": false,
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true,
                "autoDeleteOnIdle": "P14D"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(parameters('servicebus').name, '/keywordmessages/memeprocessor')]",
            "location": "[variables('rsgLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('servicebus').name, 'keywordmessages')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('servicebus').name)]"
            ],
            "properties": {
                "isClientAffine": false,
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true,
                "autoDeleteOnIdle": "P14D"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
            "apiVersion": "2022-01-01-preview",
            "name": "[concat(parameters('servicebus').name, '/newmembersmessages/greeter')]",
            "location": "[variables('rsgLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('servicebus').name, 'newmembersmessages')]",
                "[resourceId('Microsoft.ServiceBus/namespaces', parameters('servicebus').name)]"
            ],
            "properties": {
                "isClientAffine": false,
                "lockDuration": "PT30S",
                "requiresSession": false,
                "defaultMessageTimeToLive": "P14D",
                "deadLetteringOnMessageExpiration": false,
                "deadLetteringOnFilterEvaluationExceptions": false,
                "maxDeliveryCount": 10,
                "status": "Active",
                "enableBatchedOperations": true,
                "autoDeleteOnIdle": "P14D"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "name": "[parameters('storageaccount').name]",
            "location": "[variables('rsgLocation')]",
            "tags": "[parameters('defaultTags')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-03-01",
            "name": "[parameters('appserviceplan_gateway').name]",
            "location": "[variables('rsgLocation')]",
            "tags": "[parameters('defaultTags')]",
            "sku": "[parameters('appserviceplan_gateway').sku]",
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-03-01",
            "name": "[parameters('appserviceplan_textprocessor').name]",
            "location": "[variables('rsgLocation')]",
            "tags": "[parameters('defaultTags')]",
            "sku": "[parameters('appserviceplan_textprocessor').sku]",
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-03-01",
            "name": "[parameters('appserviceplan_decisionmaker').name]",
            "location": "[variables('rsgLocation')]",
            "tags": "[parameters('defaultTags')]",
            "sku": "[parameters('appserviceplan_decisionmaker').sku]",
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-03-01",
            "name": "[parameters('appserviceplan_messageorchestrator').name]",
            "location": "[variables('rsgLocation')]",
            "tags": "[parameters('defaultTags')]",
            "sku": "[parameters('appserviceplan_messageorchestrator').sku]",
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-03-01",
            "name": "[parameters('appserviceplan_memeprocessor').name]",
            "location": "[variables('rsgLocation')]",
            "tags": "[parameters('defaultTags')]",
            "sku": "[parameters('appserviceplan_memeprocessor').sku]",
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-03-01",
            "name": "[parameters('appserviceplan_greeter').name]",
            "location": "[variables('rsgLocation')]",
            "tags": "[parameters('defaultTags')]",
            "sku": "[parameters('appserviceplan_greeter').sku]",
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[parameters('functionapp_gateway').name]",
            "location": "[variables('rsgLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appserviceplan_gateway').name)]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name)]",
                "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
            ],
            "tags": "[parameters('defaultTags')]",
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appserviceplan_gateway').name)]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": true,
                    "functionAppScaleLimit": 200,
                    "minimumElasticInstanceCount": 0,
                    "netFrameworkVersion": "v6.0",
                    "ftpsState": "Disabled",
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageaccount').name, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name), '2021-09-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appinsights').name), '2020-02-02').InstrumentationKey]"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appinsights').name), '2020-02-02').ConnectionString]"
                        },
                        {
                            "name": "AZURE_FUNCTIONS_ENVIRONMENT",
                            "value": "[parameters('functionapp_gateway').environment]"
                        },
                        {
                            "name": "ChatWhitelistDecisionMakerOptions__AllowedChatIds",
                            "value": "[concat('@Microsoft.KeyVault(VaultName=', parameters('keyvault').name, ';SecretName=', parameters('functionapp_gateway').chatswhitelist_kvsecretname,')')]"
                        },
                        {
                            "name": "ServiceBusOptions__AllMessagesTopic",
                            "value": "allmessages"
                        },
                        {
                            "name": "ServiceBusOptions__fullyQualifiedNamespace",
                            "value": "[concat(parameters('servicebus').name, '.servicebus.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageaccount').name, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name), '2021-09-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(parameters('functionapp_gateway').name)]"
                        },
                        {
                            "name": "WEBSITE_ENABLE_SYNC_UPDATE_SITE",
                            "value": "true"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "1"
                        }
                    ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[parameters('functionapp_textprocessor').name]",
            "location": "[variables('rsgLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appserviceplan_textprocessor').name)]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name)]",
                "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
            ],
            "tags": "[parameters('defaultTags')]",
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appserviceplan_textprocessor').name)]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": true,
                    "functionAppScaleLimit": 200,
                    "minimumElasticInstanceCount": 0,
                    "netFrameworkVersion": "v6.0",
                    "ftpsState": "Disabled",
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageaccount').name, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name), '2021-09-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appinsights').name), '2020-02-02').InstrumentationKey]"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appinsights').name), '2020-02-02').ConnectionString]"
                        },
                        {
                            "name": "AZURE_FUNCTIONS_ENVIRONMENT",
                            "value": "[parameters('functionapp_textprocessor').environment]"
                        },
                        {
                            "name": "ServiceBusOptions__KeywordMessagesTopic",
                            "value": "keywordmessages"
                        },
                        {
                            "name": "ServiceBusOptions__FullyQualifiedNamespace",
                            "value": "[concat(parameters('servicebus').name, '.servicebus.windows.net')]"
                        },
                        {
                            "name": "TextAnalyticsOptions__Url",
                            "value": "[reference(parameters('cognitiveservices').name).endpoint]"
                        },
                        {
                            "name": "TextAnalyticsOptions__Language",
                            "value": "ru"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageaccount').name, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name), '2021-09-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(parameters('functionapp_textprocessor').name)]"
                        },
                        {
                            "name": "WEBSITE_ENABLE_SYNC_UPDATE_SITE",
                            "value": "true"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "1"
                        }
                    ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[parameters('functionapp_decisionmaker').name]",
            "location": "[variables('rsgLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appserviceplan_decisionmaker').name)]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name)]",
                "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
            ],
            "tags": "[parameters('defaultTags')]",
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appserviceplan_decisionmaker').name)]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": true,
                    "functionAppScaleLimit": 200,
                    "minimumElasticInstanceCount": 0,
                    "netFrameworkVersion": "v6.0",
                    "ftpsState": "Disabled",
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageaccount').name, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name), '2021-09-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appinsights').name), '2020-02-02').InstrumentationKey]"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appinsights').name), '2020-02-02').ConnectionString]"
                        },
                        {
                            "name": "AZURE_FUNCTIONS_ENVIRONMENT",
                            "value": "[parameters('functionapp_decisionmaker').environment]"
                        },
                        {
                            "name": "RollDiceDecisionMakerOptions__RangeTop",
                            "value": "[parameters('functionapp_decisionmaker').rolldice_decision_top_bound]"
                        },
                        {
                            "name": "ServiceBusOptions__TextMessagesTopic",
                            "value": "textmessages"
                        },
                        {
                            "name": "ServiceBusOptions__FullyQualifiedNamespace",
                            "value": "[concat(parameters('servicebus').name, '.servicebus.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageaccount').name, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name), '2021-09-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(parameters('functionapp_decisionmaker').name)]"
                        },
                        {
                            "name": "WEBSITE_ENABLE_SYNC_UPDATE_SITE",
                            "value": "true"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "1"
                        }
                    ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[parameters('functionapp_messageorchestrator').name]",
            "location": "[variables('rsgLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appserviceplan_messageorchestrator').name)]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name)]",
                "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
            ],
            "tags": "[parameters('defaultTags')]",
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appserviceplan_messageorchestrator').name)]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": true,
                    "functionAppScaleLimit": 200,
                    "minimumElasticInstanceCount": 0,
                    "netFrameworkVersion": "v6.0",
                    "ftpsState": "Disabled",
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageaccount').name, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name), '2021-09-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appinsights').name), '2020-02-02').InstrumentationKey]"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appinsights').name), '2020-02-02').ConnectionString]"
                        },
                        {
                            "name": "AZURE_FUNCTIONS_ENVIRONMENT",
                            "value": "[parameters('functionapp_messageorchestrator').environment]"
                        },
                        {
                            "name": "ServiceBusOptions__GeneralMessagesTopic",
                            "value": "generalmessages"
                        },
                        {
                            "name": "ServiceBusOptions__KeywordMessagesTopic",
                            "value": "keywordmessages"
                        },
                        {
                            "name": "ServiceBusOptions__FullyQualifiedNamespace",
                            "value": "[concat(parameters('servicebus').name, '.servicebus.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageaccount').name, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name), '2021-09-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(parameters('functionapp_messageorchestrator').name)]"
                        },
                        {
                            "name": "WEBSITE_ENABLE_SYNC_UPDATE_SITE",
                            "value": "true"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "1"
                        }
                    ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[parameters('functionapp_memeprocessor').name]",
            "location": "[variables('rsgLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appserviceplan_memeprocessor').name)]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name)]",
                "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
            ],
            "tags": "[parameters('defaultTags')]",
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appserviceplan_memeprocessor').name)]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": true,
                    "functionAppScaleLimit": 200,
                    "minimumElasticInstanceCount": 0,
                    "netFrameworkVersion": "v6.0",
                    "ftpsState": "Disabled",
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageaccount').name, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name), '2021-09-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appinsights').name), '2020-02-02').InstrumentationKey]"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appinsights').name), '2020-02-02').ConnectionString]"
                        },
                        {
                            "name": "AZURE_FUNCTIONS_ENVIRONMENT",
                            "value": "[parameters('functionapp_memeprocessor').environment]"
                        },
                        {
                            "name": "ServiceBusOptions__FullyQualifiedNamespace",
                            "value": "[concat(parameters('servicebus').name, '.servicebus.windows.net')]"
                        },
                        {
                            "name": "TelegramBotOptions__Token",
                            "value": "[concat('@Microsoft.KeyVault(VaultName=', parameters('keyvault').name, ';SecretName=', parameters('functionapp_memeprocessor').bottoken_kvsecretname,')')]"
                        },
                        {
                            "name": "SearchEngineOptions__ApiKey",
                            "value": "[concat('@Microsoft.KeyVault(VaultName=', parameters('keyvault').name, ';SecretName=', parameters('functionapp_memeprocessor').googlesearchengine_apikey_kvsecretname,')')]"
                        },
                        {
                            "name": "SearchEngineOptions__EngineId",
                            "value": "[concat('@Microsoft.KeyVault(VaultName=', parameters('keyvault').name, ';SecretName=', parameters('functionapp_memeprocessor').googlesearchengine_engineid_kvsecretname,')')]"
                        },
                        {
                            "name": "SearchEngineOptions__CountryRestriction",
                            "value": "[parameters('functionapp_memeprocessor').googlesearchengine_countryrestriction]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageaccount').name, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name), '2021-09-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(parameters('functionapp_memeprocessor').name)]"
                        },
                        {
                            "name": "WEBSITE_ENABLE_SYNC_UPDATE_SITE",
                            "value": "true"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "1"
                        }
                    ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[parameters('functionapp_greeter').name]",
            "location": "[variables('rsgLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appserviceplan_greeter').name)]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name)]",
                "[resourceId('microsoft.insights/components', parameters('appinsights').name)]"
            ],
            "tags": "[parameters('defaultTags')]",
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appserviceplan_greeter').name)]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": true,
                    "functionAppScaleLimit": 200,
                    "minimumElasticInstanceCount": 0,
                    "netFrameworkVersion": "v6.0",
                    "ftpsState": "Disabled",
                    "appSettings": 
                    [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageaccount').name, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name), '2021-09-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appinsights').name), '2020-02-02').InstrumentationKey]"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appinsights').name), '2020-02-02').ConnectionString]"
                        },
                        {
                            "name": "AZURE_FUNCTIONS_ENVIRONMENT",
                            "value": "[parameters('functionapp_greeter').environment]"
                        },
                        {
                            "name": "ServiceBusOptions__FullyQualifiedNamespace",
                            "value": "[concat(parameters('servicebus').name, '.servicebus.windows.net')]"
                        },
                        {
                            "name": "TelegramBotOptions__Token",
                            "value": "[concat('@Microsoft.KeyVault(VaultName=', parameters('keyvault').name, ';SecretName=', parameters('functionapp_greeter').bottoken_kvsecretname,')')]"
                        },
                        {
                            "name": "GreeterOptions__ChatOptions__0__GreetingsMarkdownTemplate",
                            "value": "[parameters('functionapp_greeter').greetingsMarkdownTemplate[0]]"
                        },
                        {
                            "name": "GreeterOptions__ChatOptions__0__GreetingsThreadId",
                            "value": "[parameters('functionapp_greeter').greetingsThreadId[0]]"
                        },
                        {
                            "name": "GreeterOptions__ChatOptions__0__ChatId",
                            "value": "[parameters('functionapp_greeter').chatId[0]]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageaccount').name, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccount').name), '2021-09-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(parameters('functionapp_memeprocessor').name)]"
                        },
                        {
                            "name": "WEBSITE_ENABLE_SYNC_UPDATE_SITE",
                            "value": "true"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "1"
                        }
                    ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(parameters('servicebus').name, 'allmessages', parameters('functionapp_gateway').name, 'sender')]",
            "scope": "[concat('Microsoft.ServiceBus/namespaces/', parameters('servicebus').name, '/topics/allmessages')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('servicebus').name, 'allmessages')]",
                "[resourceId('Microsoft.Web/sites', parameters('functionapp_gateway').name)]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('servicebus_sender_role')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionapp_gateway').name), '2022-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(parameters('servicebus').name, 'keywordmessages', parameters('functionapp_textprocessor').name, 'sender')]",
            "scope": "[concat('Microsoft.ServiceBus/namespaces/', parameters('servicebus').name, '/topics/keywordmessages')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('servicebus').name, 'keywordmessages')]",
                "[resourceId('Microsoft.Web/sites', parameters('functionapp_textprocessor').name)]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('servicebus_sender_role')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionapp_textprocessor').name), '2022-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(parameters('servicebus').name, 'textmessages', parameters('functionapp_textprocessor').name, 'reader')]",
            "scope": "[concat('Microsoft.ServiceBus/namespaces/', parameters('servicebus').name, '/topics/textmessages')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('servicebus').name, 'textmessages')]",
                "[resourceId('Microsoft.Web/sites', parameters('functionapp_textprocessor').name)]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('servicebus_reader_role')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionapp_textprocessor').name), '2022-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(parameters('servicebus').name, 'generalmessages', parameters('functionapp_decisionmaker').name, 'reader')]",
            "scope": "[concat('Microsoft.ServiceBus/namespaces/', parameters('servicebus').name, '/topics/generalmessages')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('servicebus').name, 'generalmessages')]",
                "[resourceId('Microsoft.Web/sites', parameters('functionapp_decisionmaker').name)]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('servicebus_reader_role')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionapp_decisionmaker').name), '2022-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(parameters('servicebus').name, 'textmessages', parameters('functionapp_decisionmaker').name, 'sender')]",
            "scope": "[concat('Microsoft.ServiceBus/namespaces/', parameters('servicebus').name, '/topics/textmessages')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('servicebus').name, 'textmessages')]",
                "[resourceId('Microsoft.Web/sites', parameters('functionapp_decisionmaker').name)]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('servicebus_sender_role')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionapp_decisionmaker').name), '2022-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(parameters('servicebus').name, 'newmembersmessages', parameters('functionapp_messageorchestrator').name, 'sender')]",
            "scope": "[concat('Microsoft.ServiceBus/namespaces/', parameters('servicebus').name, '/topics/newmembersmessages')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('servicebus').name, 'newmembersmessages')]",
                "[resourceId('Microsoft.Web/sites', parameters('functionapp_messageorchestrator').name)]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('servicebus_sender_role')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionapp_messageorchestrator').name), '2022-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(parameters('servicebus').name, 'newmembersmessages', parameters('functionapp_greeter').name, 'reader')]",
            "scope": "[concat('Microsoft.ServiceBus/namespaces/', parameters('servicebus').name, '/topics/newmembersmessages')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('servicebus').name, 'newmembersmessages')]",
                "[resourceId('Microsoft.Web/sites', parameters('functionapp_greeter').name)]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('servicebus_reader_role')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionapp_greeter').name), '2022-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(parameters('cognitiveservices').name, parameters('functionapp_textprocessor').name, 'reader')]",
            "scope": "[concat('Microsoft.CognitiveServices/accounts/', parameters('cognitiveservices').name)]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts/', parameters('cognitiveservices').name)]",
                "[resourceId('Microsoft.Web/sites', parameters('functionapp_textprocessor').name)]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('languageservices_reader_role')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionapp_textprocessor').name), '2022-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(parameters('servicebus').name, 'keywordmessages', parameters('functionapp_memeprocessor').name, 'reader')]",
            "scope": "[concat('Microsoft.ServiceBus/namespaces/', parameters('servicebus').name, '/topics/keywordmessages')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('servicebus').name, 'keywordmessages')]",
                "[resourceId('Microsoft.Web/sites', parameters('functionapp_memeprocessor').name)]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('servicebus_reader_role')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionapp_memeprocessor').name), '2022-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(parameters('servicebus').name, 'allmessages', parameters('functionapp_messageorchestrator').name, 'reader')]",
            "scope": "[concat('Microsoft.ServiceBus/namespaces/', parameters('servicebus').name, '/topics/allmessages')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('servicebus').name, 'allmessages')]",
                "[resourceId('Microsoft.Web/sites', parameters('functionapp_messageorchestrator').name)]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('servicebus_reader_role')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionapp_messageorchestrator').name), '2022-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(parameters('servicebus').name, 'generalmessages', parameters('functionapp_messageorchestrator').name, 'sender')]",
            "scope": "[concat('Microsoft.ServiceBus/namespaces/', parameters('servicebus').name, '/topics/generalmessages')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('servicebus').name, 'generalmessages')]",
                "[resourceId('Microsoft.Web/sites', parameters('functionapp_messageorchestrator').name)]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('servicebus_sender_role')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionapp_messageorchestrator').name), '2022-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(parameters('servicebus').name, 'keywordmessages', parameters('functionapp_messageorchestrator').name, 'sender')]",
            "scope": "[concat('Microsoft.ServiceBus/namespaces/', parameters('servicebus').name, '/topics/keywordmessages')]",
            "dependsOn": [
                "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('servicebus').name, 'keywordmessages')]",
                "[resourceId('Microsoft.Web/sites', parameters('functionapp_messageorchestrator').name)]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('servicebus_sender_role')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionapp_messageorchestrator').name), '2022-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "condition": "[parameters('textAnalyticsService').deploy]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(parameters('textAnalyticsService').name, parameters('functionapp_messageorchestrator').name, 'reader')]",
            "scope": "[concat('Microsoft.CognitiveServices/accounts/', parameters('textAnalyticsService').name)]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('textAnalyticsService').name)]",
                "[resourceId('Microsoft.Web/sites', parameters('functionapp_messageorchestrator').name)]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('cognitiveservices_reader_role')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionapp_messageorchestrator').name), '2022-03-01', 'Full').identity.principalId]"
            }
        },
        {
            "condition": "[parameters('textAnalyticsService').deploy]",
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2022-03-01",
            "name": "[parameters('textAnalyticsService').name]",
            "location": "[variables('rsgLocation')]",
            "tags": "[parameters('defaultTags')]",
            "sku": "[parameters('textAnalyticsService').sku]",
            "kind": "TextAnalytics",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "apiProperties": {},
                "customSubDomainName": "[parameters('textAnalyticsService').name]",
                "networkAcls": {
                    "defaultAction": "Allow",
                    "virtualNetworkRules": [],
                    "ipRules": []
                },
                "publicNetworkAccess": "Enabled"
            }
        }
    ]
}